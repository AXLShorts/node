openapi: 3.0.0
info:
  title: Books API
  version: 1.0.0
  description: API endpoints for books operations

components:
  schemas:
    Books:
      type: object
      properties:
        _id:
          type: string
          example: "507f1f77bcf86cd799439011"
        email:
          type: string
          example: "sample email"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"

    CreateBooksRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: "sample email"

    UpdateBooksRequest:
      type: object
      properties:
        email:
          type: string
          example: "updated email"

paths:
  /api/books:
    get:
      summary: Get all bookss
      description: Retrieve all bookss
      responses:
        '200':
          description: Bookss retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Books'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Bookss retrieved successfully"

    post:
      summary: Create a new books
      description: Create a new books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBooksRequest'
      responses:
        '201':
          description: Books created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Books'
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Books created successfully"

  /api/books/{id}:
    get:
      summary: Get books by ID
      description: Retrieve a books by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the books to retrieve
      responses:
        '200':
          description: Books retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Books'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Books retrieved successfully"
        '404':
          description: Books not found

    put:
      summary: Update books
      description: Update a books by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the books to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBooksRequest'
      responses:
        '200':
          description: Books updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Books'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Books updated successfully"
        '404':
          description: Books not found

    delete:
      summary: Delete books
      description: Delete a books by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the books to delete
      responses:
        '200':
          description: Books deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    nullable: true
                    example: null
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Books deleted successfully"
        '404':
          description: Books not found
                    example: false
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Validation error: id is required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Failed to retrieve books"
