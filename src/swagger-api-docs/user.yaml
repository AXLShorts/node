openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API endpoints for user operations

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: "507f1f77bcf86cd799439011"
        user:
          type: string
          example: "sample user"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"

    CreateUserRequest:
      type: object
      required:
        - user
      properties:
        user:
          type: string
          example: "sample user"

    UpdateUserRequest:
      type: object
      properties:
        user:
          type: string
          example: "updated user"

paths:
  /api/user:
    get:
      summary: Get all users
      description: Retrieve all users
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Users retrieved successfully"

    post:
      summary: Create a new user
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "User created successfully"

  /api/user/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a user by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "User retrieved successfully"
        '404':
          description: User not found

    put:
      summary: Update user
      description: Update a user by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "User updated successfully"
        '404':
          description: User not found

    delete:
      summary: Delete user
      description: Delete a user by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the user to delete
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    nullable: true
                    example: null
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "User deleted successfully"
        '404':
          description: User not found
          content:
          application/json:
              schema:
              type: object
              properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'Validation error: id is required'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Failed to retrieve user"
