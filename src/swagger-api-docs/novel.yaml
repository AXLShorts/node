openapi: 3.0.0
info:
  title: Novel API
  version: 1.0.0
  description: API endpoints for novel operations

components:
  schemas:
    Novel:
      type: object
      properties:
        _id:
          type: string
          example: "507f1f77bcf86cd799439011"
        email:
          type: string
          example: "sample email"
        age:
          type: number
          example: 123
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"

    CreateNovelRequest:
      type: object
      required:
        - email
        - age
        - isActive
      properties:
        email:
          type: string
          example: "sample email"
        age:
          type: number
          example: 123
        isActive:
          type: boolean
          example: true

    UpdateNovelRequest:
      type: object
      properties:
        email:
          type: string
          example: "updated email"
        age:
          type: number
          example: 456
        isActive:
          type: boolean
          example: false

paths:
  /api/novel:
    get:
      summary: Get all novels
      description: Retrieve all novels
      responses:
        '200':
          description: Novels retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Novel'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Novels retrieved successfully"

    post:
      summary: Create a new novel
      description: Create a new novel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNovelRequest'
      responses:
        '201':
          description: Novel created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Novel'
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Novel created successfully"

  /api/novel/{id}:
    get:
      summary: Get novel by ID
      description: Retrieve a novel by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the novel to retrieve
      responses:
        '200':
          description: Novel retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Novel'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Novel retrieved successfully"
        '404':
          description: Novel not found

    put:
      summary: Update novel
      description: Update a novel by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the novel to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNovelRequest'
      responses:
        '200':
          description: Novel updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Novel'
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Novel updated successfully"
        '404':
          description: Novel not found

    delete:
      summary: Delete novel
      description: Delete a novel by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the novel to delete
      responses:
        '200':
          description: Novel deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    nullable: true
                    example: null
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Novel deleted successfully"
        '404':
          description: Novel not found
          content:
          application/json:
              schema:
              type: object
              properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'Validation error: id is required'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Failed to retrieve novel"
